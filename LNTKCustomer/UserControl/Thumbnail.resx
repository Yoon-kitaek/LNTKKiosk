<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="labelControl1.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>