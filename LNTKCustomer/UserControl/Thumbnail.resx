<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lbcDiscountSticker.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        nnjiv2UagjIr+fqcAAAAAElFTkSuQmCC
</value>
  </data>
</root>